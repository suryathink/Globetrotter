name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t suryathink/globetrotter:latest ./server

      - name: Validate Build
        run: |
          docker run --rm suryathink/globetrotter:latest npm run build

      - name: Push Docker Image to Docker Hub
        run: |
          docker push suryathink/globetrotter:latest

  deploy:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Install SSH Client
        run: sudo apt-get install -y openssh-client

      - name: Prepare and Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }} # EC2 public IP/DNS
          EC2_USER: ${{ secrets.EC2_USER }} # Default: "ubuntu"
          EC2_KEY: ${{ secrets.EC2_KEY }} # SSH Private Key
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          # Save the private key for SSH access
          echo "${EC2_KEY}" | sed 's/\\n/\n/g' > url-shortener-backend.pem
          chmod 400 url-shortener-backend.pem

          # SSH into EC2 and deploy the new image
          ssh -o StrictHostKeyChecking=no -i url-shortener-backend.pem ${EC2_USER}@${EC2_HOST} << 'EOF'
            echo "ðŸ”„ Logging into Docker Hub..."
            docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"

            echo "ðŸ”„ Pulling the latest backend image..."
            docker pull suryathink/url-shortener-backend:latest

            echo "ðŸ“‚ Navigating to ~/Advanced-URL-Shortener"
            cd ~/Advanced-URL-Shortener

            echo "ðŸ›‘ Stopping old containers..."
            docker-compose down

            echo "ðŸ§¹ Cleaning up old Docker images..."
            docker system prune -af

            echo "ðŸš€ Starting the new containers..."
            docker-compose up -d
          EOF
